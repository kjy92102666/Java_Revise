풀스택과정!! 
azul.com 에서도 jdk를 받을 수 있다.(msi-매번,zip-가상메모리로 올린다.)
º오전 - JS,+HTML(HyperTextMarkupLanguage),css.화면구현. 약2주?
 
 program = 데이터(자료형) 처리(연산, 제어)
 ★변수:variable 바뀐다는 개념이 아니라 다양한 값이 들어올 수 있음을 숙지.
    *데이터와 관련된 변수는 절대 변하면 안된다~
    *변수(n) <ㅡ> 상수(1)
 
º오후 - DB(java,jsp). java추가기능(java swing)....
 -swing - windows(OS : 이벤트프로그램, 감지).  기본구조자체가 상속,인터페이스
 -class - innerClass, extends 차이 확인해보기. 
  innerClass : 단독선언 불가능. 관계가 있을 뿐이지, 상속의 관계x. 
   사용시 (Outer.Inner ... )

 익명클래스().
         

   
html5  (최종 계산기 프로그램?)
 'html5' 인텔리전스 기능 쓰면 기본 틀이 잡혀짐.
 -JS는 타입이 필요없다.(직관적으로 쓰임.)
 -script : 태그영역안에 문법,기능들을 적용할 수 있다.
  console.log(메세지). //웹 브라우저에서 콘솔창에 찍히는 값.
   같은줄에만 붙여놓지 않으면 ; 생략가능.
  ★내부에서 parseInt() 적용 가능.( parseInt(a)+b )
  script 선언 위치에따라 작동순서?가 다르다.

 alert : 웹브라우저 윈도우 출력. 팝업창?
         얘가 반응 안하면 웹브라우저가 작동을 안함.
 반드시 응답 받아야되는 기능은 modal
 
 
 
  Oracle은 완벽하게 지우지 않으면 설치가 제대로 되지 않는다.
 MySQL팀이 나와서 만든게 MariaDB.

 원격으로 하는게 아닌 1:1LocalDB(Microstoft Access, SQLite)
 
마리아DB 설치.
https://mariadb.org/download/?t=mariadb&p=mariadb&r=10.10.1&os=windows&cpu=x86_64&pkg=msi&m=blendbyte
  
 Zipfile 필요할때만 올린다?

 ※기존에 MariaDB가 존재 할 시, 지우고 새로 설치한다. 작업관리자-서비스(pid:ProcessID)
 (포트번호 겹칠 수 있기에...)
 
 root ps : 1234
 
 MariaDB의 기본 포트 : 3306
 포트 : 서버에서 실제로 작동되는 

db를 작성해서 sql을 작동하게 해주는 클라이언트 HeidiSQL
 HeidiSQL 접속시 신규 테이블 작성할때, LIb : libmysql.dll로 설정 후 생성.
 # 데이터 추가   --insert
 # 데이터 조회   --select★
 # 데이터 수정   --update
 # 데이터 삭제   --delete
 #데이터의 기본 라이프사이클
 
 파일시스템종류 fat16-32(usb)-ntfs(웹클라이언트).
 
 
사용자 (일반사용자. 응용프로그래머, SQL사용자, DBA)
인터페이스(응용프로그램화면, 응용프로그램 개발, SQL질의 데이터베이스스키마) 
DBMS(오브젝트코드, 임베디드DML, DML컴파일러,) : 주기억장지
데이터베이스(데이터파일 인덱스 데이터토예 데이터 사전) : 하드디스크

SQL(StructureQueryLanguage): 1데이터 정의어, 2데이터조작어, 3데이터 제어어
 1: Table 생성, 설계
 2 : insert,select,update,delete
 3 : 관리자기능.(백업,DBA만 할 수...)

(행과 열로 이루어진 )폴더 안에 파일들로 이루어진 것을 db

데이터모델 : 관계모델.

외부스키마(사용자가 보는 데이터) -<외부개념매핑>- 개념스키마(전체 데이터) -<내부개념매핑?>
- 내부 스키마(DBMS가 보는 데이터) - 데이터베이스(물리적인 데이터구조) 

릴레이션
 relation - (규칙을 가진)릴레이션, 테이블.
 
 컬렉션 
 -ArrayList - 중복허용
 -Map : 
 -Set : 중복 무시.(중복 제거할때 사용.)
 
 
객체지향 모델링(설계)
 1.객체찾기(필요한 요소 찾는 과정) 2.객체화. 3.객체<->객체 상호작용
 
 null: 참조값이 없다, 주소값이 없다.
 
 tuple:릴레이션의 행, attribute:열, schima(내포), instance(외연. 실체화. 실제값).
카디날리티 : 투플의 수
※DB에서 모든 테이블은 java에서 클래스로 모두 구현이 되어야한다.
 -속성 : 릴레이션 스키마의 열
 -도메인 : 속성이 가질 수 있는 값의 집합.
 - 차수 : 속성의 개수
 
 인스턴스 : 디스크에 있는 자료들 중 일부 객체화 된 메모리에 올라간 데이터.
 drop - 테이블, 
 delete - 데이터
 
   
cmd
ºset : 윈도우 환경설정 명령어.
 Path=바로가기가 여러가지 있다고 생각하기.
 (cmd에서 명령어를 바로 입력시, 위에 경로들로 돌면서 찾게된다.)
 
1. jdk bin파일로 환경변수 설정.
2. JAVA_HOME으로 jdk 설정.
 
 
 
 
 
 
 
 